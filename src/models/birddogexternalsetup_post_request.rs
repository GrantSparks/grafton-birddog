/*
 * BirdDog RESTful API
 *
 * Unofficial idiomatic rust bindings for the BirdDog RESTful API 2.0 generated using OpenAPI Generator.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BirddogexternalsetupPostRequest {
    /// On, Off
    #[serde(rename = "Aux", skip_serializing_if = "Option::is_none")]
    pub aux: Option<String>,
    /// On, Off
    #[serde(rename = "RainWiper", skip_serializing_if = "Option::is_none")]
    pub rain_wiper: Option<String>,
    /// On, Off
    #[serde(rename = "V12vOut", skip_serializing_if = "Option::is_none")]
    pub v12v_out: Option<String>,
}

impl BirddogexternalsetupPostRequest {
    pub fn new() -> BirddogexternalsetupPostRequest {
        BirddogexternalsetupPostRequest {
            aux: None,
            rain_wiper: None,
            v12v_out: None,
        }
    }
}

