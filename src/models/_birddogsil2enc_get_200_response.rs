/*
 * BirdDog RESTful API 2.0
 *
 * Unofficial idiomatic rust bindings for the BirdDog RESTful API 2.0 generated using OpenAPI Generator.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Birddogsil2encGet200Response {
    #[serde(
        rename = "HaiVisionPlayerSupport",
        skip_serializing_if = "Option::is_none"
    )]
    pub hai_vision_player_support: Option<String>,
    #[serde(rename = "RTMP", skip_serializing_if = "Option::is_none")]
    pub rtmp: Option<models::Birddogsil2encGet200ResponseRtmp>,
    #[serde(rename = "RTSP", skip_serializing_if = "Option::is_none")]
    pub rtsp: Option<models::Birddogsil2encGet200ResponseRtsp>,
    #[serde(rename = "SRT", skip_serializing_if = "Option::is_none")]
    pub srt: Option<models::Birddogsil2encGet200ResponseSrt>,
    #[serde(rename = "StreamingProtocol", skip_serializing_if = "Option::is_none")]
    pub streaming_protocol: Option<String>,
}

impl Birddogsil2encGet200Response {
    pub fn new() -> Birddogsil2encGet200Response {
        Birddogsil2encGet200Response {
            hai_vision_player_support: None,
            rtmp: None,
            rtsp: None,
            srt: None,
            streaming_protocol: None,
        }
    }
}
