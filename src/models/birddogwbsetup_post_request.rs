/*
 * BirdDog RESTful API
 *
 * Unofficial idiomatic rust bindings for the BirdDog RESTful API 2.0 generated using OpenAPI Generator.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BirddogwbsetupPostRequest {
    /// Range (-99 to 99)
    #[serde(rename = "BG", skip_serializing_if = "Option::is_none")]
    pub bg: Option<String>,
    /// Range (-99 to 99)
    #[serde(rename = "BR", skip_serializing_if = "Option::is_none")]
    pub br: Option<String>,
    /// Range (0 to 255)
    #[serde(rename = "BlueGain", skip_serializing_if = "Option::is_none")]
    pub blue_gain: Option<String>,
    /// Range (2800 to 6500)
    #[serde(rename = "ColorTemp", skip_serializing_if = "Option::is_none")]
    pub color_temp: Option<String>,
    /// Range (-99 to 99)
    #[serde(rename = "GB", skip_serializing_if = "Option::is_none")]
    pub gb: Option<String>,
    /// Range (-99 to 99)
    #[serde(rename = "GR", skip_serializing_if = "Option::is_none")]
    pub gr: Option<String>,
    /// Range (0 to 14)
    #[serde(rename = "Level", skip_serializing_if = "Option::is_none")]
    pub level: Option<String>,
    /// On, Off
    #[serde(rename = "Matrix", skip_serializing_if = "Option::is_none")]
    pub matrix: Option<String>,
    /// Range (0 to 14)
    #[serde(rename = "Offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<String>,
    /// Range (0 to 14)
    #[serde(rename = "Phase", skip_serializing_if = "Option::is_none")]
    pub phase: Option<String>,
    /// Range (-99 to 99)
    #[serde(rename = "RB", skip_serializing_if = "Option::is_none")]
    pub rb: Option<String>,
    /// Range (-99 to 99)
    #[serde(rename = "RG", skip_serializing_if = "Option::is_none")]
    pub rg: Option<String>,
    /// Range (0 to 255)
    #[serde(rename = "RedGain", skip_serializing_if = "Option::is_none")]
    pub red_gain: Option<String>,
    /// FL LIGHT, STD, OFF, HIGH SAT
    #[serde(rename = "Select", skip_serializing_if = "Option::is_none")]
    pub select: Option<String>,
    /// Range (1 to 5)
    #[serde(rename = "Speed", skip_serializing_if = "Option::is_none")]
    pub speed: Option<String>,
    /// AUTO, INDOOR, OUTDOOR, OUTDOOR-AUTO, ONEPUSH, ATW, MANUAL, SVL-AUTO, SVL, SVL-OUTDOOR-AUTO
    #[serde(rename = "WbMode", skip_serializing_if = "Option::is_none")]
    pub wb_mode: Option<String>,
}

impl BirddogwbsetupPostRequest {
    pub fn new() -> BirddogwbsetupPostRequest {
        BirddogwbsetupPostRequest {
            bg: None,
            br: None,
            blue_gain: None,
            color_temp: None,
            gb: None,
            gr: None,
            level: None,
            matrix: None,
            offset: None,
            phase: None,
            rb: None,
            rg: None,
            red_gain: None,
            select: None,
            speed: None,
            wb_mode: None,
        }
    }
}

